@Library('c6_shared_lib@master') _

def getAWSSecret(String region, String secretId) {
    return sh(script: "aws secretsmanager get-secret-value --region ${region} --secret-id ${secretId} | jq --raw-output '.SecretString'", returnStdout: true).trim()
}

pipeline {
    agent { label 'shared_infra_slave' }
    stages {
        stage("Install Dependencies & Run Dashboard Regression Detect Flake"){
            steps{
                    script {
						cypress_user = getAWSSecret("us-west-2","/shared_infra/dashboard_regression_${ENVIRONMENT}/CYPRESS_UI_USER")
                        cypress_password = getAWSSecret("us-west-2","/shared_infra/dashboard_regression_${ENVIRONMENT}/CYPRESS_UI_PASSWORD")
                        cypress_global_user = getAWSSecret("us-west-2","/shared_infra/dashboard_regression_${ENVIRONMENT}/CYPRESS_GLOBAL_USER")
                        cypress_global_password = getAWSSecret("us-west-2","/shared_infra/dashboard_regression_${ENVIRONMENT}/CYPRESS_GLOBAL_PASSWORD")
                        sh """
							. ~/.bashrc
							set +x
							export cypress_uiUser=${cypress_user}
							export cypress_uiPassword=${cypress_password}
							export cypress_globalUser=${cypress_global_user}
							export cypress_globalPassword=${cypress_global_password}
							set -x
							nvm use v18.12.0
							cd dashboard
							rm -rf ./node_modules
							npm install
							npm run cy:grep -- --spec "${SPEC_FILE_PATH ?: 'cypress/tests/ui/**/*'}" --env name=${ENVIRONMENT},grep="${TEST_NAME_GREP}",burn=${RUN_COUNT ?: 1}
                        """
                    }
            }
        }
    }

    post {
          always {
            publishHTML target: [
				allowMissing: false,
				alwaysLinkToLastBuild: false,
				keepAll: true,
				reportName : "Regression Test Reports",
				reportDir:   "dashboard/cypress/reports/html",
				reportFiles: "index.html"
            ]
          }
		  cleanup {
			cleanWs()
		  }
    }
}