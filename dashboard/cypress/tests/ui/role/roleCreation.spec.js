import { globalContent } from "../../../locators/globalLocators";
import { roleLocators } from "../../../locators/roleLocators";
import { getRoleName } from "../../../utils/resourceNameUtil";

describe("Role creation tests", () => {
	beforeEach(() => {
		cy.loginProgrammatically();
	});

	it("Valid role creation", () => {
		const timeStamp = new Date().getTime();
		const roleName = getRoleName("role - creation") + timeStamp;

		// Visit roles index page
		cy.visit("/dashboard/roles");

		// Go to role form and assert elements
		cy.clickElement(roleLocators.addRoleButton);
		cy.getByRole(roleLocators.roleHeading).should("have.text", "Add Role");
		cy.verifyElementsExist(roleLocators.nameField, roleLocators.descriptionField);

		// Complete mandatory fields
		cy.getByRole(roleLocators.nameField).type(roleName);
		cy.getByRole(roleLocators.descriptionField).type("This role was generated by the automation framework");

		cy.findByPlaceholderText(globalContent.SEARCH).type("VIEW_PUBLISHER_DASHBOARD", { timeout: 5000 });
		cy.findByRole("checkbox", { name: `Toggle VIEW_PUBLISHER_DASHBOARD Selected` }).click();

		// Submit form
		cy.findByRole("button", { name: globalContent.SAVE }).click();

		// Validate pop up is visible and it's text
		cy.validatePopupMessage(`${roleName} ${globalContent.SUCCESSFULLY_CREATED_SUFFIX}`);
	});
});
